For the following question, you are required to analyze code review guidelines for companies in industry. Only one file needs to be added to your repository, but you should discuss as a group.


1. Check out the code reviewer guidelines for software engineers at Yelp and Microsoft (Visual Studio Mobile team). What concepts are similar between the companies (List at least two)? What are some key differences (List at least two)? In general, what items should be present in a code review checklist for a development team?
The next questions will require you to review code reviews on the Code Review Stack Exchange (https://codereview.stackexchange.com/) website, a Stack Overflow-like website for code reviews between peers online. To analyze reviews, you may use either of the code review guidelines above, another code review checklist online (cite the source), or your own personal knowledge, opinions, and experience.
Similar:
Both of them emphasize the importance of ensuring that code is correct and well architected.
Yelp specifially highlights that verifying code is maintainable and an effective solution 
for their requirements. 
Microsoft also is focused on highlighting the correctness of the logic. 

Different:
Yelp advises to make code reviews smaller whereas Microsoft says to make them longer is better.
Yelp explicitly states that the primary reviewer is as responsible for the final code as the person who wrote itâ€‹
Microsoft also shares this view but extends it to all reviewers


2. Find an example of a "good" code review. Provide a link to the review and explain why you found the review beneficial.

The link to the review: https://codereview.stackexchange.com/questions/287927/rock-paper-scissors-game


The review of the "Rock Paper Scissors" game code is good because it offers specific, actionable suggestions for improvement. It advises on modularizing the code by separating the pcSelection computation, enhances user experience by suggesting a change in the promptUserInput function to notify users of invalid choices, and recommends renaming the gameRules map for clarity. These suggestions aim at improving code quality, user interaction, and readability, making the feedback constructive and beneficial for development.


3. Find an example of a "bad" code review. Provide a link to the review and briefly explain why you found the review not beneficial. In addition, include recommendations for improvement to the review feedback.




Add your responses to a file named code_reviews.txt and upload it to the main branch of your workshop repository.
